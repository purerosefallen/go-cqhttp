stages:
  - build
  - deploy

variables:
  GIT_DEPTH: "1"
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  GO_CQHTTP_VERSION: v0.9.24-fix2-mycard

binary:
  stage: build
  tags:
    - linux
  image: golang:1.14.2-alpine
  script:
    - go env -w GO111MODULE=auto && go env -w CGO_ENABLED=0 && go env -w GOPROXY=https://goproxy.cn,https://gocenter.io,https://goproxy.io,direct
    - mkdir dist
    - go build -ldflags "-s -w -extldflags '-static' -X 'github.com/Mrs4s/go-cqhttp/coolq.version=$GO_CQHTTP_VERSION'" -o dist/cqhttp
  artifacts:
    paths:
      - dist/

docker:
  stage: build
  tags: 
    - docker
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --pull --build-arg GO_CQHTTP_VERSION=$GO_CQHTTP_VERSION -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

upload_to_minio:
  stage: deploy
  dependencies:
    - binary
  tags: 
    - linux
  image: python
  script:
    - pip install -U awscli
    - aws s3 --endpoint=https://minio.mycard.moe:9000 sync --delete dist/ s3://mycard/cqhttp
  only:
    - master

deploy_latest:
  stage: deploy
  dependencies: []
  tags: 
    - docker
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - master

deploy_tag:
  stage: deploy
  dependencies: []
  tags: 
    - docker
  variables:
    CONTAINER_TAG_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_TAG_IMAGE
    - docker push $CONTAINER_TAG_IMAGE
  only:
    - tags
